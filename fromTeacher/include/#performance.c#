#ifndef _PERFORMANCE_C 
#define _PERFORMANCE_C 1 

#include<complex.h>
#include"../../../include/complex.c"

extern int N,T,Tp;

double MSE(int m,complex **H,complex **H_es)
{
  int n;
  double mse;

  mse = 0.0;
  for(n=0;n<N;n++) {
    mse += CAbs2(H[m][n] - H_es[m][n]);
  }
  mse /= (double)N;

  return mse;
}

double BER(int t,complex **X,complex **X_es)
{
  int n;
  double ber;

  ber = 0.0;
  for(n=0;n<N;n++) {
    if(creal(X[n][t])*creal(X_es[n][t])<0.0) ber++;
    if(cimag(X[n][t])*cimag(X_es[n][t])<0.0) ber++;
  }
  ber /= 2.0*N*(T-Tp);

  return ber;
}


#endif
